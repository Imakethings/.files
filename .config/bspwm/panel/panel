#!/bin/sh
export PANEL_FIFO=/tmp/panel-fifo
export PANEL_FONT_FAMILY1="-gohu-gohufont-medium-r-normal--11-80-100-100-c-60-iso10646-1"
export PANEL_FONT_FAMILY2="-*-stlarch-*-*-*-*-11-*-*-*-*-*-*-*"
export PANEL_HEIGHT=20
export PANEL_FIFO PANEL_HEIGHT PANEL_FONT_FAMILY
export PATH=$PATH:~/.config/bspwm/panel/

cd ~/.config/bspwm/panel/

CLOCK() {
	while :; do
        # The default AM/PM equivalent is lowercase hence awk.
        TIME=$(date "+%I:%M %p" | awk '{print toupper($0)}') 
        echo "S%{F#FFffffff}%{F-} ${TIME}"
		sleep 1
	done
}

VOLUME() {
	while :; do
        ICON_MUTE=''
        ICON_FULL=''
        ICON_REST=''

        VOLUME=$(amixer sget Master | sed -n "0,/.*\[\([0-9]\+\)%\].*/s//\1/p")
        ICON=$ICON_REST

        if   [[ $VOLUME -eq 0 ]]; then
            ICON=$ICON_MUTE
        elif [[ $VOLUME -gt 50 ]]; then
            ICON=$ICON_FULL
        fi

        echo "V%{F#FF66AABB}$ICON%{F-} $VOLUME%%%{A}"
		sleep 1
	done
}

BATTERY() {
    while :; do
        ICON_CHARGE='%{F#FFFEA63C}%{F-}'
        ICON_FULL='%{F#FF66AABB}%{F-}'
        ICON_REST='%{F#FF66AABB}%{F-}'
        ICON_DEAD='%{F#FF66AABB}%{F-}'
        ICON_MAX='%{F#FF66AABB}%{F-}'

        PERCENTAGE=$(acpi --battery | awk '{gsub(/,/, "");} {print $4}' | sed 's/.$//')

        if   [[ $PERCENTAGE -lt 25 ]]; then
            ICON=$ICON_DEAD
        elif [[ $PERCENTAGE -lt 50 ]]; then
            ICON=$ICON_REST
        elif [[ $PERCENTAGE -gt 50 ]]; then
            ICON=$ICON_FULL
        fi
        
        if  [[ $(acpi -a | grep on-line) ]]; then 
            ICON=$ICON_CHARGE
            if [[ $PERCENTAGE -gt 95 ]]; then
                ICON=$ICON_MAX
            fi
        fi

        echo "B$ICON $PERCENTAGE%%"
		sleep 1
	done
}

NETWORK() {
	while :; do
        WIFISTATUS=$(cat /sys/class/net/wlp*/operstate)
        ETHNSTATUS=$(cat /sys/class/net/enp*/operstate)
        
        QUALITY=$(iwconfig | grep 'Link Quality=' | awk '{gsub(/[=/]/," "); print $3}')
        MAX=$(iwconfig | grep 'Link Quality=' | awk '{gsub(/[=/]/," "); print $4}')
        IP=$(ip addr | grep inet | grep -v inet6 | grep -v 127.0.0.1 | \
                       grep -v 192.168.122.1 | awk '{print $2}' | xargs echo -n)

        if [[ "$WIFISTATUS" == "up" ]]; then
            IP=$(iwconfig | grep ESSID | sed -e 's/.*ESSID:"\(.*\)".*/\1/')
            PERCENTAGE=$(echo $QUALITY*100/$MAX | bc)
            case $PERCENTAGE in
                [1-9] ) ICON="" ;;
                [1-3]*) ICON="" ;;
                [4-5]*) ICON="" ;;
                [6-7]*) ICON="" ;;
                *)      ICON="" ;; 
            esac
        fi

        [[ "$ETHNSTATUS" == "down"  && \
        "$WIFISTATUS" == "down" ]]  && ICON=""
        [[ "$ETHNSTATUS" == "up" ]] && ICON=""

        echo "N%{F#FF66AABB}$ICON%{F-}"
		sleep 3
	done
}

MUSIC() {
    while :; do
        # Determine the state.
        if [[ $(mpc status|wc -l) -le 2 ]]; then
            STATE="STOPPED"
        else
            STATE=$(mpc status | head -n2 | tail -n1 | \
                    awk '{print toupper($1)}'| sed 's/\[//g;s/\]//g')
        fi
        SONG=$(mpc current)
        if [[ $STATE == "PAUSED" ]]; then
            ICON="" 
        else
            ICON=""
        fi

        echo "H%{F#FF66AABB}$ICON $SONG%{F-}"
        sleep 1
    done
}

# Prevent running another panel when already existant.
if [ $(pgrep -cx panel) -gt 1 ]; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"

mkfifo "$PANEL_FIFO"

bspc control --subscribe > "$PANEL_FIFO" &
bspc config bottom_padding $PANEL_HEIGHT

CLOCK > "$PANEL_FIFO" &
BATTERY > "$PANEL_FIFO" &
VOLUME > "$PANEL_FIFO" &
NETWORK > "$PANEL_FIFO" &
MUSIC > "$PANEL_FIFO" &

. panel_colors

cat "$PANEL_FIFO" | panel_bar | \
     lemonbar -b \
              -g x$PANEL_HEIGHT \
              -f "$PANEL_FONT_FAMILY1" \
              -f "$PANEL_FONT_FAMILY2" \
              -F "$COLOR_FOREGROUND" \
              -B "$COLOR_BACKGROUND" \
              | panel_clean | sh &
wait
