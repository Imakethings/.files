#! /bin/sh
# notify.sh
# Copyright (C) 2015 Mirko van der Waal <mvdw at airmail dot cc>
# Distributed under terms of the GNU2 license.
# This notifier is build to work with awesome's naughty. 
# It relies on 'awesome-client' to require 'naughty'
# https://awesome.naquadah.org/wiki/Naughty

__version="0.0.1"
__name="notify"

while getopts ":hvp:t:f:" opt; do
case $opt in
    p|preset)   PRESET=$OPTARG ;;
    t|title)    TITLE=$OPTARG ;;
    f|fade)     FADE=$OPTARG ;;
    v|version)  echo "$__name $__version"; exit 0 ;;
    h|help)     echo "
$(tput bold)NAME$(tput sgr0)
    Naughtify - A wrapper for naughty notifications within awesome.

$(tput bold)FLAGS$(tput sgr0)
    $(tput bold)-h, -help$(tput sgr0)
        You're looking at it.
    
    $(tput bold)-v, -version$(tput sgr0)
        Show the current version.

    $(tput bold)-t, -title$(tput sgr0)
        The notification title.

    $(tput bold)-p, -preset$(tput sgr0)
        Select an preset. [critical, urgent, normal, low]
    
    $(tput bold)-f, -fade$(tput sgr0)
        The fadeout timer. (Also known as 'timeout')
    "; exit 0 ;;
    *) echo "Woops, -$OPTARG doesn't exist or required an argument. ($0 -help)"; exit 1 ;;
    esac
done

shift $(($OPTIND-1))

# Get the text & remove trailing/leading spaces. .
for arg; do TEXT="$TEXT $arg"; done
TEXT=$(echo $TEXT | sed 's/^ *//;s/ *$//;s/  */ /;')

# If there is no preset, fallback to a normal one.
if [[ ! $PRESET ]]; then PRESET=normal; fi
# Ensure an empty string when there is no title given.
if [[ ! $TITLE ]]; then TITLE=""; fi
# Set the default timeout to 15
if [[ ! $FADE ]]; then FADE=15; fi

echo "naughty.notify({
            timeout = $FADE,
            preset = naughty.config.presets.$PRESET,
            title = \"$TITLE\", 
            text = \"$TEXT\", })" | awesome-client - 
